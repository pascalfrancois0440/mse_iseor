const { sequelize } = require('../config/database');

async function enrichReferentiel() {
  try {
    console.log('üîÑ Enrichissement du r√©f√©rentiel ISEOR...\n');

    await sequelize.authenticate();
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie');

    // Exemples concrets par domaine
    const enrichissements = [
      // Domaine 1: Conditions de travail
      { code: '101', exemples: ['Espaces exigus', 'Circulation difficile', 'Zones mal organis√©es'], questions: ['Les espaces sont-ils suffisants ?', 'La circulation est-elle fluide ?', 'L\'agencement favorise-t-il le travail ?'] },
      { code: '102', exemples: ['Mat√©riel obsol√®te', 'Fournitures manquantes', 'Outils inadapt√©s'], questions: ['Le mat√©riel est-il performant ?', 'Les fournitures sont-elles disponibles ?', 'Les outils sont-ils adapt√©s ?'] },
      { code: '103', exemples: ['Bruit excessif', 'Mauvaise qualit√© air', '√âclairage insuffisant'], questions: ['Le niveau sonore est-il acceptable ?', 'La qualit√© de l\'air est-elle bonne ?', 'L\'√©clairage est-il adapt√© ?'] },
      
      // Domaine 2: Organisation du travail  
      { code: '201', exemples: ['R√©partition in√©quitable', 'Surcharge ponctuelle', 'Comp√©tences mal utilis√©es'], questions: ['La r√©partition est-elle √©quitable ?', 'Les comp√©tences sont-elles bien utilis√©es ?', 'Y a-t-il des surcharges ?'] },
      { code: '202', exemples: ['Absent√©isme r√©current', 'Manque de suivi', 'Difficult√©s remplacement'], questions: ['L\'absent√©isme est-il suivi ?', 'Y a-t-il une politique de pr√©vention ?', 'Les remplacements sont-ils organis√©s ?'] },
      
      // Domaine 3: Communication 3C
      { code: '301', exemples: ['Manque communication √©quipe', 'Informations non partag√©es', 'R√©unions inefficaces'], questions: ['La communication est-elle fluide ?', 'Les informations sont-elles partag√©es ?', 'Les r√©unions sont-elles efficaces ?'] },
      { code: '302', exemples: ['Cloisonnement services', 'Manque coop√©ration', 'Conflits inter-services'], questions: ['Les relations inter-services sont-elles bonnes ?', 'Y a-t-il coop√©ration ?', 'Les conflits sont-ils r√©solus ?'] },
      
      // Domaine 4: Gestion du temps
      { code: '401', exemples: ['Retards fr√©quents', '√âch√©ances non respect√©es', 'Planification irr√©aliste'], questions: ['Les d√©lais sont-ils respect√©s ?', 'La planification est-elle r√©aliste ?', 'Y a-t-il anticipation ?'] },
      { code: '402', exemples: ['Absence planification', 'Manque priorisation', 'Outils inadapt√©s'], questions: ['Les activit√©s sont-elles planifi√©es ?', 'Les priorit√©s sont-elles d√©finies ?', 'Les outils sont-ils efficaces ?'] },
      
      // Domaine 5: Formation int√©gr√©e
      { code: '501', exemples: ['Formation inadapt√©e', '√âcart formation/poste', 'Formation trop th√©orique'], questions: ['La formation correspond-elle au poste ?', 'Y a-t-il ad√©quation th√©orie/pratique ?', 'Les comp√©tences sont-elles utilis√©es ?'] },
      { code: '502', exemples: ['Besoins non identifi√©s', 'Demandes ignor√©es', 'Absence entretiens'], questions: ['Les besoins sont-ils identifi√©s ?', 'Les demandes sont-elles prises en compte ?', 'Y a-t-il entretiens d√©veloppement ?'] },
      
      // Domaine 6: Mise en ≈ìuvre strat√©gique
      { code: '601', exemples: ['Orientations floues', 'Strat√©gie non communiqu√©e', 'Vision court terme'], questions: ['Les orientations sont-elles claires ?', 'La strat√©gie est-elle communiqu√©e ?', 'Y a-t-il vision long terme ?'] },
      { code: '602', exemples: ['Strat√©gie d√©finie seul', 'Manque implication √©quipes', 'D√©cisions vase clos'], questions: ['Qui participe √† la d√©finition ?', 'Les √©quipes sont-elles impliqu√©es ?', 'Y a-t-il concertation ?'] }
    ];

    console.log('üìù Mise √† jour des exemples et questions...\n');
    
    for (const item of enrichissements) {
      const exemples = JSON.stringify(item.exemples);
      const questions = JSON.stringify(item.questions);
      
      await sequelize.query(`
        UPDATE referentiel_iseor 
        SET exemples = ?, questions_guides = ?, updated_at = ?
        WHERE code = ?
      `, {
        replacements: [exemples, questions, new Date().toISOString(), item.code]
      });
      
      console.log(`‚úÖ Code ${item.code} enrichi`);
    }

    console.log('\nüéâ Enrichissement termin√© !');
    console.log('üìö Le r√©f√©rentiel contient maintenant des exemples concrets et questions guides sp√©cifiques');

  } catch (error) {
    console.error('‚ùå Erreur :', error);
  } finally {
    await sequelize.close();
  }
}

enrichReferentiel();
